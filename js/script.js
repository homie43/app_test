/* Задание на урок:

1) Автоматизировать вопросы пользователю про фильмы при помощи цикла

2) Сделать так, чтобы пользователь не мог оставить ответ в виде пустой строки,
отменить ответ или ввести название фильма длинее, чем 50 символов. Если это происходит - 
возвращаем пользователя к вопросам опять. (К любой строке можно обратиться как 
str.length - и получить её длину)

3) При помощи условий проверить  personalMovieDB.count, и если он меньше 10 - вывести сообщение
"Просмотрено довольно мало фильмов", если от 10 до 30 - "Вы классический зритель", а если больше - 
"Вы киноман". А если не подошло ни к одному варианту - "Произошла ошибка"

4) Потренироваться и переписать цикл еще двумя способами*/

'use strict';
//1.1
const numberOfFilms = +prompt('Сколько фильмов вы уже посмотрели?', '');
//1.2
const personalMovieDB = {
    count: numberOfFilms,
    movies: {},
    actors: {},
    genres: [],
    privat: false
};
//1.3
// const a = prompt('Один из последних просмотренных фильмов?', ''),
//       b = +prompt('На сколько оцените его?', ''),
//       c = prompt('Один из последних просмотренных фильмов?', ''),
//       d = +prompt('На сколько оцените его?', '');

// personalMovieDB.movies[a] = b; обращаемся к обьекту personalMovieDB, потом через точку обращаемся к его свойству movies, которое тоже является объектом, потом через [], обращаемся к свойству a(можно так же через точку, но [] лучше), которого нет, но оно автоматически создается 
// - a - это ответ на первый вопрос, и он будет записан в качестве свойства
// - b - это ответ на второй вопрос и он будет записан в качестве значения этого свойства.

// personalMovieDB.movies[c] = d;

// Как итог, получим:

// const personalMovieDB = {
//     movies: {
//       q1: q2
//     }
// };
// Где a/b - это ответы пользователя

// Мы берем объект personalMovieDB и обращаемся к его свойству movies. Последний тоже является объектом, а значит может содержать свойства и их значения.При помощи записи movies[a] мы можем сделать 2 действия: либо получить свойство с именем а , либо, если его не существует - создать его.

// Так как объект movies еще пустой, то мы создаем новое свойство, которое будет называть так, какой ответ оставил пользователь в а. Теперь в это свойство мы бы хотели записать значение. Поэтому дальше идет присваивание:

// movies[a] = b;

// В b лежит ответ на второй вопрос и именно он помещается в свойство. Результат наглядно выглядит примерно так:

// movies['ответ на первый вопрос'] = "ответ на второй вопрос"


for (let i = 0; i < 2; i++) {
    const a = prompt('Один из последних просмотренных фильмов?', ''),
          b = +prompt('На сколько оцените его?', '');

    if (a != null && b != null && a != '' && b != '' && a.length < 50) {//исходим от обратного: если в prompt нажать отмена, мы получим null, как раз это нам и нужно, чтобы пользователь не мог нажать отмена, если a не равна null, то дейтсвие выполняется, если пользователь нажал отмена, то  a = null; a != '' переменная не равна пустой строке, она должна быть заполнена; a.length < 50 означает что длинна символов не должна быть больше 50;
        personalMovieDB.movies[a] = b;
        alert('done');
    } else { //иначе будет ошибка
        alert('error');
        i--;
    }
}

if (personalMovieDB.count < 10) {
    alert('Просмотрено довольно мало фильмов');
} else if (personalMovieDB.count >= 10 && personalMovieDB.count < 30) {
    alert('Вы классический зритель');
} else if (personalMovieDB.count >= 30) {
    alert('Вы киноман');
} else {
    alert('Произошла ошибка');
}

console.log(personalMovieDB);